  - name: Create pihole group
    group:
      name: pihole
      state: present

  - name: Create pihole user
    user:
      name: pihole
      group: pihole
      create_home: false
      shell: /usr/sbin/nologin
      state: present

  - name: Create /etc/pihole directory
    file:
      path: /etc/pihole
      state: directory
      owner: pihole
      group: pihole
      mode: '0775'

  - name: Check if /etc/pihole/setupVars.conf already exists
    stat:
      path: /etc/pihole/setupVars.conf
    register: setupvars

  - name: Generate pihole setupVars.conf (overwrite with -e overwrite_setupvars=true )
    copy:
      dest: /etc/pihole/setupVars.conf
      owner: root
      group: root
      mode: '0644'
      backup: true
      content: |
        WEBPASSWORD=
        PIHOLE_INTERFACE=wlan0
        IPV4_ADDRESS={{ ansible_default_ipv4.address }}/24
        QUERY_LOGGING=true
        INSTALL_WEB_INTERFACE=true
        LIGHTTPD_ENABLED=true
        INSTALL_WEB_SERVER=true
        DNSMASQ_LISTENING=local
        PIHOLE_DNS_1=8.8.8.8
        PIHOLE_DNS_2=8.8.4.4
        DNS_FQDN_REQUIRED=true
        DNS_BOGUS_PRIV=true
        BLOCKING_ENABLED=true
        CACHE_SIZE=10000

    when: (setupvars.stat.exists == false ) or (( overwrite_setupvars is defined ) and ( overwrite_setupvars == "true" ))
    register: copy_setupvars

  - name: Check if pihole already installed
    stat:
      path: /usr/local/bin/pihole
    register: pihole_installed

  - name: Install pihole in unattended mode. This might take some time!
    shell: 'curl -L https://install.pi-hole.net | sudo bash /dev/stdin --unattended'
    when:  ( pihole_installed.stat.exists == false ) or
           ( copy_setupvars.changed ) 

  - name: Create the github directory if it does not exist
    file:
      path: /home/{{ ansible_user }}/Github
      state: directory
      mode: '0755'

  - name: Git clone the whitelist lib 
    git:
      repo: https://github.com/anudeepND/whitelist.git
      dest: /home/{{ ansible_user }}/Github/whitelist

  - name: Go to the folder and execute command
    command: chdir=/home/{{ ansible_user }}/Github/whitelist/scripts/ sudo python3 whitelist.py

  - name: Print out admin address
    debug:
      msg: "http://{{ ansible_default_ipv4.address }}/admin/"